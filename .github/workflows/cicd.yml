name: CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      update_baseline:
        description: 'Update visual regression baseline'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Build Jekyll
        run: npm run build
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npx playwright install chromium --with-deps
      - uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: visual-regression-baseline
          path: tests/
      - run: npm test
      - run: npm run test:performance
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: github.event_name == 'pull_request'
        run: |
          score=$(cat .lighthouseci/manifest.json | jq -r '.[] | .summary.performance')
          if (( $(echo "$score < 0.9" | bc -l) )); then
            echo "Performance score below threshold: $score"
            exit 1
          fi
      - if: success() || github.event_name == 'workflow_dispatch' && inputs.update_baseline == 'true' || github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-baseline
          path: tests/baseline.png
          retention-days: 1

  deploy:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: Build Jekyll
        run: npm run build
      - run: node scripts/generate-pdf.js
      - run: |
          if [ ! -f "_site/resume.pdf" ]; then
              echo "PDF was not generated!"
              exit 1
          fi
      - uses: actions/configure-pages@v4
      - uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
      - id: deployment
        uses: actions/deploy-pages@v4
      - uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: _site/resume.pdf
          if-no-files-found: error
      - if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: _site/resume.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}