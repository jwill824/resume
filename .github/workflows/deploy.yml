name: Deploy Resume

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm init -y
          npm install puppeteer

      - name: Generate PDF
        run: |
          cat << 'EOF' > generate-pdf.js
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          
          (async () => {
            const browser = await puppeteer.launch();
            const page = await browser.newPage();
            
            await page.goto(`file:${process.cwd()}/index.html`, {
              waitUntil: 'networkidle0'
            });
            
            await page.pdf({
              path: 'resume.pdf',
              format: 'A4',
              margin: {
                top: '20px',
                right: '20px',
                bottom: '20px',
                left: '20px'
              }
            });
            
            await browser.close();
          })();
          EOF
          node generate-pdf.js

      - name: Validate HTML
        run: |
          npx html-validate index.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Create artifacts directory and copy files
      - name: Prepare deployment
        run: |
          mkdir -p _site
          cp index.html _site/
          cp styles.css _site/
          cp resume.pdf _site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Upload PDF as artifact
      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: resume.pdf
          if-no-files-found: error

      # Create release with PDF if this is a tag
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: resume.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}